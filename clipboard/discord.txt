// Configurar las rutas para la autenticación con Discord
app.get('/login', (req, res) => {
    const redirect_uri = 'http://localhost:3000/callback'; // URL de retorno de la autenticación
    const scope = 'identify email'; // Permisos solicitados por la aplicación
    const state = crypto.randomBytes(16).toString('hex'); // Estado generado aleatoriamente para evitar ataques CSRF

    // Guardar el estado en una cookie segura
    res.cookie('discord_state', state, { httpOnly: true, secure: true, sameSite: 'strict' });

    // Redireccionar al usuario a la URL de autorización de Discord
    const authorize_url = `https://discord.com/api/oauth2/authorize?client_id=${process.env.DISCORD_CLIENT_ID}&redirect_uri=${encodeURIComponent(redirect_uri)}&response_type=code&scope=${encodeURIComponent(scope)}&state=${encodeURIComponent(state)}`;
    res.redirect(authorize_url);
});

app.get('/callback', async (req, res) => {
    const { code, state } = req.query;

    // Validar el estado devuelto por Discord
    const discord_state = req.cookies.discord_state;
    if (state !== discord_state) {
        res.status(400).send('Invalid state parameter');
        return;
    }

    // Canjear el código de autorización por un token de acceso
    const redirect_uri = 'http://localhost:3000/callback';
    const params = new URLSearchParams();
    params.append('client_id', process.env.DISCORD_CLIENT_ID);
    params.append('client_secret', process.env.DISCORD_CLIENT_SECRET);
    params.append('grant_type', 'authorization_code');
    params.append('code', code);
    params.append('redirect_uri', redirect_uri);
    params.append('scope', 'identify email');
    const token_response = await fetch('https://discord.com/api/oauth2/token', {
        method: 'POST',
        headers: { 'Content-Type': 'application/x-www-form-urlencoded' },
        body: params.toString(),
    });
    const token_data = await token_response.json();

    // Obtener la información del usuario utilizando el token de acceso
    const user_response = await fetch('https://discord.com/api/users/@me', {
        headers: { 'Authorization': `Bearer ${token_data.access_token}` },
    });
    const user_data = await user_response.json();

    // Guardar la información del usuario en la sesión
    req.session.user = { id: user_data.id, username: user_data.username, email: user_data.email };

    // Redireccionar al usuario a la página de inicio
    res.redirect('/');
});
